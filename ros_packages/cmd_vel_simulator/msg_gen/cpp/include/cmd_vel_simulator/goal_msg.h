/* Auto-generated by genmsg_cpp for file /home/ankush/ros_packages/cmd_vel_simulator/msg/goal_msg.msg */
#ifndef CMD_VEL_SIMULATOR_MESSAGE_GOAL_MSG_H
#define CMD_VEL_SIMULATOR_MESSAGE_GOAL_MSG_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"


namespace cmd_vel_simulator
{
template <class ContainerAllocator>
struct goal_msg_ : public ros::Message
{
  typedef goal_msg_<ContainerAllocator> Type;

  goal_msg_()
  : d(0.0)
  , th(0.0)
  , opt(0)
  {
  }

  goal_msg_(const ContainerAllocator& _alloc)
  : d(0.0)
  , th(0.0)
  , opt(0)
  {
  }

  typedef float _d_type;
  float d;

  typedef float _th_type;
  float th;

  typedef int16_t _opt_type;
  int16_t opt;


private:
  static const char* __s_getDataType_() { return "cmd_vel_simulator/goal_msg"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "ead0a80715facf19ee84694b8322c9ca"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "float32 d\n\
float32 th\n\
int16 opt\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, d);
    ros::serialization::serialize(stream, th);
    ros::serialization::serialize(stream, opt);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, d);
    ros::serialization::deserialize(stream, th);
    ros::serialization::deserialize(stream, opt);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(d);
    size += ros::serialization::serializationLength(th);
    size += ros::serialization::serializationLength(opt);
    return size;
  }

  typedef boost::shared_ptr< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cmd_vel_simulator::goal_msg_<ContainerAllocator>  const> ConstPtr;
}; // struct goal_msg
typedef  ::cmd_vel_simulator::goal_msg_<std::allocator<void> > goal_msg;

typedef boost::shared_ptr< ::cmd_vel_simulator::goal_msg> goal_msgPtr;
typedef boost::shared_ptr< ::cmd_vel_simulator::goal_msg const> goal_msgConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::cmd_vel_simulator::goal_msg_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace cmd_vel_simulator

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ead0a80715facf19ee84694b8322c9ca";
  }

  static const char* value(const  ::cmd_vel_simulator::goal_msg_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xead0a80715facf19ULL;
  static const uint64_t static_value2 = 0xee84694b8322c9caULL;
};

template<class ContainerAllocator>
struct DataType< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cmd_vel_simulator/goal_msg";
  }

  static const char* value(const  ::cmd_vel_simulator::goal_msg_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 d\n\
float32 th\n\
int16 opt\n\
";
  }

  static const char* value(const  ::cmd_vel_simulator::goal_msg_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.d);
    stream.next(m.th);
    stream.next(m.opt);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct goal_msg_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::cmd_vel_simulator::goal_msg_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::cmd_vel_simulator::goal_msg_<ContainerAllocator> & v) 
  {
    s << indent << "d: ";
    Printer<float>::stream(s, indent + "  ", v.d);
    s << indent << "th: ";
    Printer<float>::stream(s, indent + "  ", v.th);
    s << indent << "opt: ";
    Printer<int16_t>::stream(s, indent + "  ", v.opt);
  }
};


} // namespace message_operations
} // namespace ros

#endif // CMD_VEL_SIMULATOR_MESSAGE_GOAL_MSG_H

