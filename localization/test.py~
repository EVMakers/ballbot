from filter import *

class MySystem(LinearSystem):
  def __init__(self):
    '''
    Models the system
    x[k] = A[k] * x[k-1] + B[k] * u[k] + transition noise
    z[k] = C[k] * x[k] + measurement noise
    
    R is the covariance of transition noise
    Q is the covariance of measurement noise
    '''
    self.A = np.array([[1, 0, 0],
                       [0, 1, 0],
                       [0, 0, 1]])
    self.C = np.array(C)
    self.R = np.array(R)
    self.Q = np.array(Q)
  def A(self, x):
    raise NotImplementedError()
  def B(self, x):
    raise NotImplementedError()


B = 
